// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tarea7.Data.Models;

namespace Tarea7.Migrations
{
    [DbContext(typeof(vacunaContext))]
    [Migration("20210401220030_solicitante")]
    partial class solicitante
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Tarea7.Data.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("provincias");
                });

            modelBuilder.Entity("Tarea7.Data.Models.Solicitante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HaTenidoCovid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Justificacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Latitud")
                        .HasColumnType("REAL");

                    b.Property<float>("Longitud")
                        .HasColumnType("REAL");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sangre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Solicitantes");
                });

            modelBuilder.Entity("Tarea7.Data.Models.Vacuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CantidadEntrante")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cantidad_entrante");

                    b.Property<int>("CantidadRestante")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cantidad_restante");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("marca");

                    b.HasKey("Id");

                    b.ToTable("vacunas");
                });

            modelBuilder.Entity("Tarea7.Data.Models.Vacunado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("apellido");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cedula");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<float?>("Latitud")
                        .HasColumnType("REAL")
                        .HasColumnName("latitud");

                    b.Property<float?>("Longitud")
                        .HasColumnType("REAL")
                        .HasColumnName("longitud");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nombre");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("provincia_id");

                    b.Property<string>("SignoZodiacal")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("signo_zodiacal");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("telefono");

                    b.Property<DateTime?>("Vacuna1Fecha")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("vacuna1_fecha");

                    b.Property<int?>("Vacuna1Id")
                        .IsRequired()
                        .HasColumnType("INTEGER")
                        .HasColumnName("vacuna1_id");

                    b.Property<DateTime?>("Vacuna2Fecha")
                        .HasColumnType("TEXT")
                        .HasColumnName("vacuna2_fecha");

                    b.Property<int?>("Vacuna2Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("vacuna2_id");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("Vacuna1Id");

                    b.HasIndex("Vacuna2Id");

                    b.HasIndex(new[] { "Cedula" }, "IX_vacunados_cedula")
                        .IsUnique();

                    b.ToTable("vacunados");
                });

            modelBuilder.Entity("Tarea7.Data.Models.Solicitante", b =>
                {
                    b.HasOne("Tarea7.Data.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Tarea7.Data.Models.Vacunado", b =>
                {
                    b.HasOne("Tarea7.Data.Models.Provincia", "Provincia")
                        .WithMany("Vacunados")
                        .HasForeignKey("ProvinciaId")
                        .IsRequired();

                    b.HasOne("Tarea7.Data.Models.Vacuna", "Vacuna1")
                        .WithMany("VacunadoVacuna1s")
                        .HasForeignKey("Vacuna1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tarea7.Data.Models.Vacuna", "Vacuna2")
                        .WithMany("VacunadoVacuna2s")
                        .HasForeignKey("Vacuna2Id");

                    b.Navigation("Provincia");

                    b.Navigation("Vacuna1");

                    b.Navigation("Vacuna2");
                });

            modelBuilder.Entity("Tarea7.Data.Models.Provincia", b =>
                {
                    b.Navigation("Vacunados");
                });

            modelBuilder.Entity("Tarea7.Data.Models.Vacuna", b =>
                {
                    b.Navigation("VacunadoVacuna1s");

                    b.Navigation("VacunadoVacuna2s");
                });
#pragma warning restore 612, 618
        }
    }
}
